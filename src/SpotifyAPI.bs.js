// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Fetch = require("bs-fetch/src/Fetch.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function accessToken(json) {
  return Json_decode.field("access_token", Json_decode.string, json);
}

function albumSearchResults(json) {
  return Json_decode.field("albums", (function (param) {
                return Json_decode.field("items", (function (param) {
                              return Json_decode.array((function (json) {
                                            var arr = Json_decode.field("images", (function (param) {
                                                    return Json_decode.array((function (param) {
                                                                  return Json_decode.field("url", Json_decode.string, param);
                                                                }), param);
                                                  }), json);
                                            return /* record */[
                                                    /* id */Json_decode.field("id", Json_decode.string, json),
                                                    /* name */Json_decode.field("name", Json_decode.string, json),
                                                    /* artists */Json_decode.field("artists", (function (param) {
                                                            return Json_decode.array((function (param) {
                                                                          return Json_decode.field("name", Json_decode.string, param);
                                                                        }), param);
                                                          }), json),
                                                    /* image */Caml_array.caml_array_get(arr, 1)
                                                  ];
                                          }), param);
                            }), param);
              }), json);
}

function albumTracks(json) {
  return Json_decode.field("tracks", (function (param) {
                return Json_decode.field("items", (function (param) {
                              return Json_decode.array((function (param) {
                                            return Json_decode.field("id", Json_decode.string, param);
                                          }), param);
                            }), param);
              }), json);
}

function tracks(json) {
  return Json_decode.field("tracks", (function (param) {
                return Json_decode.array((function (json) {
                              return /* record */[
                                      /* albumName */Json_decode.field("album", (function (param) {
                                              return Json_decode.field("name", Json_decode.string, param);
                                            }), json),
                                      /* artists */Json_decode.field("artists", (function (param) {
                                              return Json_decode.array((function (param) {
                                                            return Json_decode.field("name", Json_decode.string, param);
                                                          }), param);
                                            }), json),
                                      /* name */Json_decode.field("name", Json_decode.string, json),
                                      /* popularity */Json_decode.field("popularity", Json_decode.$$int, json),
                                      /* id */Json_decode.field("id", Json_decode.string, json)
                                    ];
                            }), param);
              }), json);
}

function audioFeatures(json) {
  return Json_decode.field("audio_features", (function (param) {
                return Json_decode.array((function (json) {
                              return /* record */[
                                      /* id */Json_decode.field("id", Json_decode.string, json),
                                      /* danceability */Json_decode.field("danceability", Json_decode.$$float, json),
                                      /* energy */Json_decode.field("energy", Json_decode.$$float, json),
                                      /* speechiness */Json_decode.field("speechiness", Json_decode.$$float, json),
                                      /* acousticness */Json_decode.field("acousticness", Json_decode.$$float, json),
                                      /* instrumentalness */Json_decode.field("instrumentalness", Json_decode.$$float, json),
                                      /* liveness */Json_decode.field("liveness", Json_decode.$$float, json),
                                      /* valence */Json_decode.field("valence", Json_decode.$$float, json),
                                      /* tempo */Json_decode.field("tempo", Json_decode.$$float, json),
                                      /* loudness */Json_decode.field("loudness", Json_decode.$$float, json)
                                    ];
                            }), param);
              }), json);
}

var Decode = /* module */[
  /* accessToken */accessToken,
  /* albumSearchResults */albumSearchResults,
  /* albumTracks */albumTracks,
  /* tracks */tracks,
  /* audioFeatures */audioFeatures
];

var apiUrl = "https://api.spotify.com/v1";

function searchUrl(q) {
  return "" + (String(apiUrl) + ("/search?q=" + (String(q) + "&type=album&limit=5&market=US")));
}

function albumUrl(id) {
  return "" + (String(apiUrl) + ("/albums/" + (String(id) + "?market=US")));
}

function tracksUrl(ids) {
  var strIds = ids.join(",");
  return "" + (String(apiUrl) + ("/tracks?ids=" + (String(strIds) + "&market=US")));
}

function audioFeaturesUrl(ids) {
  var strIds = ids.join(",");
  return "" + (String(apiUrl) + ("/audio-features?ids=" + (String(strIds) + "")));
}

function makeRequest(token, url) {
  return fetch(url, Fetch.RequestInit[/* make */0](/* Get */0, {
                      Accept: "application/json",
                      Authorization: "Bearer " + (String(token) + "")
                    }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                return prim.json();
              }));
}

function search(token, q) {
  return makeRequest(token, searchUrl(q)).then((function (json) {
                return Promise.resolve(albumSearchResults(json));
              }));
}

function getAlbum(token, id) {
  return makeRequest(token, albumUrl(id)).then((function (json) {
                return Promise.resolve(albumTracks(json));
              }));
}

function getTracks(token, ids) {
  return makeRequest(token, tracksUrl(ids)).then((function (json) {
                return Promise.resolve(tracks(json));
              }));
}

function getAudioFeatures(token, ids) {
  return makeRequest(token, audioFeaturesUrl(ids)).then((function (json) {
                return Promise.resolve(audioFeatures(json));
              }));
}

var Request = /* module */[
  /* apiUrl */apiUrl,
  /* searchUrl */searchUrl,
  /* albumUrl */albumUrl,
  /* tracksUrl */tracksUrl,
  /* audioFeaturesUrl */audioFeaturesUrl,
  /* makeRequest */makeRequest,
  /* search */search,
  /* getAlbum */getAlbum,
  /* getTracks */getTracks,
  /* getAudioFeatures */getAudioFeatures
];

exports.Decode = Decode;
exports.Request = Request;
/* No side effect */
